*Remove Task in UI, replace with async event/delegate fired Arena  (search on .net async delegate c#)  ArenaStarted(), ArenaStopped(reason), ArenaStep(Robots[], Missiles[])
*SDK accessible collection of parameters such as ArenaSize, MaxSpeed, ... Dictonary<string, double>
Replace Main in SDK Robot with Step+Init (called periodically) -> adapt every existing robots
Add watchdog to monitor user Robot and stop a match if a team is considered as cheater by using too many CPU time
Split robots creation from arena start
Load robot dynamically from DLL (dll found in specified directory in app.config)
redo speed/acceleration management using double